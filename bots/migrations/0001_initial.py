# Generated by Django 5.1.7 on 2025-06-12 03:12

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_profittakingprofile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BacktestConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('risk_json', models.JSONField(default=dict, help_text='Custom risk settings for this backtest')),
                ('slippage_ms', models.IntegerField(default=0, help_text='Slippage in milliseconds')),
                ('slippage_r', models.DecimalField(decimal_places=5, default=0.0, help_text='Slippage in R (risk units) or percentage', max_digits=10)),
                ('label', models.CharField(blank=True, help_text='User-defined label for this config', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BacktestRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('instrument_symbol', models.CharField(help_text='The trading instrument symbol for this backtest run', max_length=50)),
                ('data_window_start', models.DateTimeField()),
                ('data_window_end', models.DateTimeField()),
                ('equity_curve', models.JSONField(default=list, help_text='List of equity values over time')),
                ('stats', models.JSONField(default=dict, help_text='Key performance indicators from the backtest')),
                ('simulated_trades_log', models.JSONField(blank=True, default=list, help_text='Log of all simulated trades', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='bots.backtestconfig')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('strategy_template', models.CharField(help_text='Filename of the strategy template, e.g., footprint_v1.py', max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bots', to='accounts.account')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_bots', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BotVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code_hash', models.CharField(help_text='SHA256 hash of the strategy code and params', max_length=64)),
                ('params', models.JSONField(default=dict, help_text='Parameters for this version of the bot strategy')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='bots.bot')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('bot', 'code_hash')},
            },
        ),
        migrations.AddField(
            model_name='backtestconfig',
            name='bot_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backtest_configs', to='bots.botversion'),
        ),
        migrations.CreateModel(
            name='LiveRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('instrument_symbol', models.CharField(help_text='The trading instrument symbol for this live run', max_length=50)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('stopped_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('STOPPING', 'Stopping'), ('STOPPED', 'Stopped'), ('ERROR', 'Error')], default='PENDING', max_length=50)),
                ('pnl_r', models.DecimalField(blank=True, decimal_places=5, help_text='Profit and Loss in R units or percentage', max_digits=10, null=True)),
                ('drawdown_r', models.DecimalField(blank=True, decimal_places=5, help_text='Max drawdown in R units or percentage', max_digits=10, null=True)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('bot_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_runs', to='bots.botversion')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='BacktestOhlcvData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('open', models.DecimalField(decimal_places=8, max_digits=19)),
                ('high', models.DecimalField(decimal_places=8, max_digits=19)),
                ('low', models.DecimalField(decimal_places=8, max_digits=19)),
                ('close', models.DecimalField(decimal_places=8, max_digits=19)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('backtest_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ohlcv_data', to='bots.backtestrun')),
            ],
            options={
                'verbose_name': 'Backtest OHLCV Data',
                'verbose_name_plural': 'Backtest OHLCV Data',
                'indexes': [models.Index(fields=['backtest_run', 'timestamp'], name='bots_backte_backtes_9f7ab7_idx')],
                'unique_together': {('backtest_run', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='BacktestIndicatorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('indicator_name', models.CharField(db_index=True, max_length=100)),
                ('value', models.DecimalField(blank=True, decimal_places=8, max_digits=19, null=True)),
                ('backtest_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_data', to='bots.backtestrun')),
            ],
            options={
                'verbose_name': 'Backtest Indicator Data',
                'verbose_name_plural': 'Backtest Indicator Data',
                'indexes': [models.Index(fields=['backtest_run', 'timestamp', 'indicator_name'], name='bots_backte_backtes_b8ab7e_idx')],
                'unique_together': {('backtest_run', 'timestamp', 'indicator_name')},
            },
        ),
    ]
