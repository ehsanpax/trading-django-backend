version: '3.8'

services:

  redis:
    image: "redis:alpine"

  # Added RabbitMQ broker for MT5â†”Backend messaging
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"    # AMQP
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  django:
    build:
      context: .
      dockerfile: Dockerfile.Django
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      # - rabbitmq  # Uncomment if Django depends on RabbitMQ during startup
    command: python manage.py run_system

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.Celery
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
      # - rabbitmq  # Uncomment if workers consume RabbitMQ directly later
    command: celery -A trading_platform.celery_app worker -l info -P gevent --concurrency=10 -Q celery

  # Dedicated worker for live bot runs to isolate event loops
  celery_live_bots_worker:
    build:
      context: .
      dockerfile: Dockerfile.Celery
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
      # - rabbitmq  # Uncomment if/when live bots directly consume AMQP
    command: celery -A trading_platform.celery_app worker -l info -Q live_bots -P solo -c 1 -Ofair --logfile=logs/celery_live_bots.log

  celery_backtest_worker:
    build:
      context: .
      dockerfile: Dockerfile.Celery
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
      # - rabbitmq
    command: celery -A trading_platform.celery_app worker -l info -Q backtests -P threads -c 3 --logfile=celery_backtest.log

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.Celery
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
      # - rabbitmq
    command: celery -A trading_platform.celery_app beat -l info --pidfile=/tmp/celerybeat.pid

  mt5_events_consumer:
    build:
      context: .
      dockerfile: Dockerfile.Django
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - .:/app
    command: python manage.py run_mt5_events_consumer

volumes:
  postgres_data:
  rabbitmq_data:
