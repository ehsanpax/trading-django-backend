version: '3.8'

services:

  redis:
    image: "redis:alpine"

  django:
    build:
      context: .
      dockerfile: Dockerfile.Django
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
    command: python manage.py run_system

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.Celery
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
    command: celery -A trading_platform.celery_app worker -l info -P gevent --concurrency=10 -Q celery,live_bots

  celery_backtest_worker:
    build:
      context: .
      dockerfile: Dockerfile.Celery
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
    command: celery -A trading_platform.celery_app worker -l info -Q backtests -P threads -c 3 --logfile=celery_backtest.log

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.Celery
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
    command: celery -A trading_platform.celery_app beat -l info --pidfile=/tmp/celerybeat.pid

volumes:
  postgres_data:
